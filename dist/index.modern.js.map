{"version":3,"file":"index.modern.js","sources":["../src/assets/icon_trash.jsx","../src/components/EntityComponent/EntityValue.jsx","../src/components/EntityComponent/EntityValues.jsx","../src/helpers/validations.jsx","../src/components/EntityComponent/EntityDetails.jsx","../src/helpers/common_constants.jsx","../src/components/IntentComponent/Dropdown.jsx","../src/components/IntentComponent/utterance/Utterance.jsx","../src/components/IntentComponent/IntentUtterances.jsx","../src/components/IntentComponent/IntentDetails.jsx","../src/index.js"],"sourcesContent":["import React from 'react';\n\nfunction IconTrash() {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n\t\t\t<g fill=\"none\" fill-rule=\"evenodd\" stroke=\"#1A1A1A\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n\t\t\t\t<path d=\"M2.4 6.5v7c0 1.105.835 2 1.867 2h7.466c1.032 0 1.867-.895 1.867-2v-7M1.467 3.5h13.066M6.133 3.5v-3h3.734v3M8 7.5v5M10.8 7.5v5M5.2 7.5v5\" />\n\t\t\t</g>\n\t\t</svg>\n\t);\n}\n\nexport { IconTrash };\n","import React, { useState, useRef, useEffect } from 'react';\nimport { IconTrash } from '../../assets/icon_trash.jsx';\n\nconst EntityValue = (props) => {\n\tconst [ value, setValue ] = useState(props.item.value);\n\tconst [ synonyms, setSynonyms ] = useState(props.item.synonyms);\n\tconst [ newSynonym, setNewSynonym ] = useState('');\n\tconst [ remove, setRemove ] = useState(false);\n\tconst synonymInput = useRef(null);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tprops.handleUpdate([ ...props.values ], props.index, {\n\t\t\t\tvalue: value,\n\t\t\t\tsynonyms: synonyms\n\t\t\t});\n\t\t},\n\t\t[ value, synonyms ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (newSynonym) {\n\t\t\t\tif (synonyms) {\n\t\t\t\t\tsetSynonyms([ ...synonyms, newSynonym ]);\n\t\t\t\t} else {\n\t\t\t\t\tsetSynonyms(newSynonym);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t},\n\t\t[ newSynonym ]\n\t);\n\n\tconst handleNewSynonym = (target) => {\n\t\tif (target.current.value.length > 0) {\n\t\t\tsetNewSynonym(target.current.value);\n\t\t\ttarget.current.value = '';\n\t\t} else {\n\t\t\tsetNewSynonym('');\n\t\t}\n\t};\n\n\t// synonyms\n\tconst removeSynonym = (value) => {\n\t\tlet arr = [ ...synonyms ];\n\t\tlet index = arr.indexOf(value);\n\n\t\tif (index !== -1) {\n\t\t\tarr.splice(index, 1);\n\t\t\tsetSynonyms(arr);\n\t\t}\n\t};\n\n\tconst makeSynonyms = (items, active) => {\n\t\tif (items) {\n\t\t\treturn (\n\t\t\t\titems &&\n\t\t\t\titems.map((item, i) => {\n\t\t\t\t\tif (item && !active) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"synonym\" key={i}>\n\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={i} className=\"synonym\">\n\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"synonym__remove\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tremoveSynonym(item);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t&#10005;\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n\n\tconst handleRemove = (e) => {\n\t\te.stopPropagation();\n\t\tsetRemove(true);\n\t\tsetTimeout(() => {\n\t\t\tprops.removeValue(props.index);\n\t\t\tsetRemove(false);\n\t\t}, 220);\n\t};\n\n\tif (props.activeValue !== props.index) {\n\t\treturn (\n\t\t\t<li\n\t\t\t\tclassName={`item item--entity ${remove ? 'item--remove' : ''}`}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setActiveValue(props.index);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"item__inner\">\n\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t<div className=\"cell cell--3--small\">\n\t\t\t\t\t\t\t<div className=\"item__value item__value--primary\">{value}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"cell cell--9--small\">\n\t\t\t\t\t\t\t<div className=\"item__values\">{makeSynonyms(synonyms, false)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"item__buttons\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn--remove btn--remove--main\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\thandleRemove(e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconTrash />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<li className={`item item--entity item--active ${remove ? 'item--remove' : ''}`}>\n\t\t\t\t<div className=\"item__inner\">\n\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t<div className=\"cell cell--3--small\">\n\t\t\t\t\t\t\t<div className=\"item__value item__value--primary\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tdata-input=\"true\"\n\t\t\t\t\t\t\t\t\tclassName=\"editor-input\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tdefaultValue={value}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter value\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tsetValue(e.target.value);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"cell cell--9--small\">\n\t\t\t\t\t\t\t<div className=\"item__values\">\n\t\t\t\t\t\t\t\t{makeSynonyms(synonyms, true)}\n\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\thandleNewSynonym(synonymInput);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"editor-input\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: '0.625rem' }}\n\t\t\t\t\t\t\t\t\t\tref={synonymInput}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter synonym\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input className=\"editor-input\" type=\"submit\" hidden={true} />\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"item__buttons\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn--remove btn--remove--main\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\thandleRemove(e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconTrash />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n};\n\nexport default EntityValue;\n","import React, { useState, useEffect } from 'react';\nimport EntityValue from './EntityValue.jsx';\n\nfunction EntityValues(props) {\n\tconst [ activeValue, setActiveValue ] = useState(null);\n\n\tfunction handleUpdate(arr, index, item) {\n\t\tarr[index] = {\n\t\t\tvalue: item.value,\n\t\t\tsynonyms: item.synonyms\n\t\t};\n\n\t\tprops.setValues(arr);\n\t}\n\n\tconst makeItems = (items) => {\n\t\tif (items) {\n\t\t\treturn items.map((item, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment key={index}>\n\t\t\t\t\t\t<EntityValue\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\tvalues={props.values}\n\t\t\t\t\t\t\tremoveValue={props.removeValue}\n\t\t\t\t\t\t\thandleUpdate={handleUpdate}\n\t\t\t\t\t\t\tactiveValue={activeValue}\n\t\t\t\t\t\t\tsetActiveValue={setActiveValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\tif (props.values) {\n\t\treturn <div>{makeItems(props.values)}</div>;\n\t} else {\n\t\treturn null\n\t}\n}\n\nexport default EntityValues;\n","export const validateInput = (elem, term, regex, message) => {\n  let reg = new RegExp(regex);\n  if (reg.test(term)) {\n    elem.setCustomValidity('');\n  } else {\n    elem.setCustomValidity(message);\n  }\n  elem.reportValidity();\n\n  return reg.test(term);\n};\n","import React, { useState, useEffect } from 'react';\nimport EntityValues from './EntityValues.jsx';\nimport _ from 'lodash';\nimport { useRef } from 'react';\nimport { validateInput } from '../../helpers/validations.jsx';\n\nfunction EntityDetails(props) {\n\tconst [ entity, setEntity ] = useState(null);\n\tconst [ name, setName ] = useState(null);\n\tconst [ values, setValues ] = useState(null);\n\tconst [ newValue, setNewValue ] = useState(null);\n\tconst [valid, setValid] = useState(true);\n\tconst valueInput = useRef(null);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (!entity) {\n\t\t\t\tsetEntity(props.entity);\n\t\t\t}\n\t\t},\n\t\t[ props.entity ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetName(props.entity.name);\n\t\t\tsetValues(props.entity.values);\n\t\t},\n\t\t[ entity ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (name && values) {\n\t\t\t\tprops.onUpdate({\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalues: values\n\t\t\t\t}, valid);\n\t\t\t}\n\t\t},\n\t\t[ name, values ]\n\t);\n\n\t// add new value to value array\n\tconst addNewValue = () => {\n\t\tlet val = {\n\t\t\tvalue: newValue,\n\t\t\tsynonyms: []\n\t\t};\n\n\t\tlet arr = [...values, val];\n\t\tsetValues(arr);\n\t};\n\n\tconst removeValue = (index) => {\n\t\tlet arr = [ ...values ];\n\t\tif (index !== -1) {\n\t\t\tarr.splice(index, 1);\n\t\t\tsetValues(arr);\n\t\t}\n\t};\n\n\tif (values) {\n\t\treturn (\n\t\t\t<div className=\"convo-details\">\n\t\t\t\t<section className=\"layout--editor-content\">\n\t\t\t\t\t<section className=\"entities-editor\">\n\t\t\t\t\t\t{/* Entity name value */}\n\t\t\t\t\t\t<div className=\"margin--30--large\">\n\t\t\t\t\t\t\t<h3 className=\"margin--10--large\">Entity name</h3>\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tdefaultValue={name ? name : ''}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Entity name\"\n\t\t\t\t\t\t\t\t\tclassName=\"editor-input input--item-name\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tlet message = 'Entity names shall begin with alphabetic characters from a to Z. The entity name may contain multiple underscores per word. Entity names shall not contain any numbers at all or soecial characters other than undersocres.'\n\t\t\t\t\t\t\t\t\t\tlet validate = validateInput(e.target, e.target.value, '^[A-Za-z](_*[A-Za-z])*_*$', message);\n\t\t\t\t\t\t\t\t\t\tsetValid(validate);\n\t\t\t\t\t\t\t\t\t\tsetName(e.target.value);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* Entity words */}\n\t\t\t\t\t\t<div className=\"margin--50--large\">\n\t\t\t\t\t\t\t<h3 className=\"font--18--large margin--10--large\">Values</h3>\n\t\t\t\t\t\t\t<div className=\"margin--24--large\">\n\t\t\t\t\t\t\t\t<EntityValues values={values} setValues={setValues} removeValue={removeValue} />\n\t\t\t\t\t\t\t\t<form onSubmit={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\t\t\t\taddNewValue();\n\t\t\t\t\t\t\t\t\t\tsetNewValue(null);\n\t\t\t\t\t\t\t\t\t\tvalueInput.current.value = '';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editor-input input--add-field\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter reference value\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setNewValue(e.target.value)}\n\t\t\t\t\t\t\t\t\t\tref={valueInput}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport default EntityDetails;\n","export const getRandomColor = () => {\n\tvar letters = \"0123456789ABCDEF\";\n\tvar color = \"#\";\n\n\tfor (var i = 0; i < 6; i++) {\n\t\tcolor += letters[Math.floor(Math.random() * 16)];\n\t}\n\treturn color;\n};\n\nexport const stringToColor = (value) => {\n\treturn value.getHashCode().intToHSL();\n}\n\nString.prototype.getHashCode = function () {\n\tvar hash = 0;\n\tif (this.length == 0) return hash;\n\tfor (var i = 0; i < this.length; i++) {\n\t\thash = this.charCodeAt(i) + ((hash << 5) - hash);\n\t\thash = hash & hash; // Convert to 32bit integer\n\t}\n\treturn hash;\n};\n\nNumber.prototype.intToHSL = function () {\n\tvar shortened = this % 220;\n\treturn \"hsl(\" + shortened + \",100%, 80%)\";\n};\n\nexport const generateId = (length) => {\n\tvar result           = '';\n\tvar characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tvar charactersLength = characters.length;\n\tfor ( var i = 0; i < length; i++ ) {\n\t\t result += characters.charAt(Math.floor(Math.random() * charactersLength));\n\t}\n\treturn result;\n}\n\nexport const getCaretCharacterOffsetWithin = (element) => {\n\tvar caretOffset = 0;\n\tvar doc = element.ownerDocument || element.document;\n\tvar win = doc.defaultView || doc.parentWindow;\n\tvar sel;\n\tif (typeof win.getSelection != \"undefined\") {\n\t\tsel = win.getSelection();\n\t\tif (sel.rangeCount > 0) {\n\t\t\tvar range = win.getSelection().getRangeAt(0);\n\t\t\tvar preCaretRange = range.cloneRange();\n\t\t\tpreCaretRange.selectNodeContents(element);\n\t\t\tpreCaretRange.setEnd(range.endContainer, range.endOffset);\n\t\t\tcaretOffset = preCaretRange.toString().length;\n\t\t}\n\t} else if ((sel = doc.selection) && sel.type != \"Control\") {\n\t\tvar textRange = sel.createRange();\n\t\tvar preCaretTextRange = doc.body.createTextRange();\n\t\tpreCaretTextRange.moveToElementText(element);\n\t\tpreCaretTextRange.setEndPoint(\"EndToEnd\", textRange);\n\t\tcaretOffset = preCaretTextRange.text.length;\n\t}\n\treturn caretOffset;\n}\n\nexport const getColor = (index) => {\n\tlet arr = [\n\t\t\"#56ebd3\",\n\t\t\"#fbacf6\",\n\t\t\"#9ee786\",\n\t\t\"#e4b5ff\",\n\t\t\"#c2e979\",\n\t\t\"#20d8fd\",\n\t\t\"#e8d25c\",\n\t\t\"#42edec\",\n\t\t\"#f3c46f\",\n\t\t\"#5cefba\",\n\t\t\"#e8de7a\",\n\t\t\"#7ee8c0\",\n\t\t\"#e8d98c\",\n\t\t\"#88e99a\",\n\t\t\"#cfdd73\",\n\t\t\"#8be8ad\",\n\t\t\"#dff799\",\n\t\t\"#b5eaa1\",\n\t\t\"#c2d681\",\n\t\t\"#b5e287\",\n\t];\n\n\treturn arr[index % arr.length]\n};\n\n// Move caret to a specific point in a DOM element\nexport const setCaretPosition = (el, pos) => {\n\n\t// Loop through all child nodes\n\tfor (var node of el.childNodes) {\n\t\tif (node.nodeType == 3) { // we have a text node\n\t\t\tif (node.length >= pos) {\n\t\t\t\t// finally add our range\n\t\t\t\tvar range = document.createRange(),\n\t\t\t\t\tsel = window.getSelection();\n\t\t\t\trange.setStart(node, pos);\n\t\t\t\trange.collapse(true);\n\t\t\t\tsel.removeAllRanges();\n\t\t\t\tsel.addRange(range);\n\t\t\t\treturn -1; // we are done\n\t\t\t} else {\n\t\t\t\tpos -= node.length;\n\t\t\t}\n\t\t} else {\n\t\t\tpos = setCaretPosition(node, pos);\n\t\t\tif (pos == -1) {\n\t\t\t\treturn -1; // no need to finish the for loop\n\t\t\t}\n\t\t}\n\t}\n\treturn pos; // needed because of recursion stuff\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport TextInput from 'react-autocomplete-input';\nimport 'react-autocomplete-input/dist/bundle.css';\n\nfunction Dropdown(props) {\n\tconst [entities, setEntities] = useState(props.entities);\n\tconst [allEntities, setAllEntities] = useState(props.entities);\n\tconst [entitiesNames, setEntitiesNames] = useState([]);\n\tconst input = useRef();\n\n\tconst modalRef = useOnclickOutside(() => {\n\t\tprops.setSelection(null);\n\t});\n\n\tconst filterEntities = (term) => {\n\t\tlet arr = [...allEntities];\n\t\tlet filteredArr = arr.filter(\n\t\t\t(item) => item.name && item.name.toLowerCase().includes(term.trim().toLowerCase())\n\t\t);\n\n\t\tsetEntities(filteredArr);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlet arr = entities\n\t\t\t\t.map((item) => {\n\t\t\t\t\treturn item.name;\n\t\t\t\t})\n\t\t\t\t.filter((item) => item);\n\t\t\t//console.log(arr)\n\t\t\tsetEntitiesNames(arr);\n\t\t},\n\t\t[entities]\n\t);\n\n\n\tif (entities) {\n\n\t\tlet dropdownStyles = {\n\t\t\tposition: 'absolute',\n\t\t\ttop: '100%',\n\t\t\ttransition: 'all 220ms ease-in-out',\n\t\t\tvisibility: props.dropdownState.active ? 'visible' : 'hidden',\n\t\t\topacity: props.dropdownState.active ? '1' : '0',\n\t\t\tleft: props.dropdownState.position\n\t\t}\n\n\t\treturn (\n\t\t\t<div class=\"dropdown\" ref={modalRef} style={dropdownStyles}>\n\t\t\t\t<header className=\"dropdown__header\">\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tComponent=\"input\"\n\t\t\t\t\t\ttrigger=\"\"\n\t\t\t\t\t\toptions={entitiesNames}\n\t\t\t\t\t\tspaceRemovers={[]}\n\t\t\t\t\t\tmatchAny={true}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tfilterEntities(e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tref={input}\n\t\t\t\t\t\tclassName=\"dropdown__search editor-input\"\n\t\t\t\t\t\tplaceholder=\"Filter entities\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div class=\"dropdown__selection\">Selection: <strong>{props.selection && props.selection.toString()}</strong></div>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"dropdown__items\">\n\t\t\t\t\t{entities[0] && entities[0].map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.tagSelection(item.name, item.name)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t@\n\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport default Dropdown;\n","import React, { useRef, useState, useEffect } from 'react'\nimport '@yaireo/tagify/src/tagify.scss'\nimport rangy from 'rangy'\nimport _ from 'lodash'\nimport ContentEditable from 'react-contenteditable'\nimport { getCaretCharacterOffsetWithin, stringToColor, setCaretPosition, generateId } from '../../../helpers/common_constants'\nimport Dropdown from '../Dropdown'\nimport { IconTrash } from '../../../assets/icon_trash'\n\nexport const Utterance = (props) => {\n    const [dropdownState, setDropdownState] = useState({\n        position: 0,\n        active: false\n    });\n\n    const [selection, setSelection] = useState(null)\n    const [whitelist, setWhitelist] = useState([]);\n    const [valid, setValid] = useState(true);\n\n    const active = props.active === props.index;\n\n    const input = useRef(null);\n    const text = useRef(null);\n    const inputWrapper = useRef('');\n    const cursorPosition = useRef(null);\n\n    /* handle validation */\n    useEffect(() => {\n        let textReg = /^[a-zA-Z][a-zA-Z/\"/'/`/\\s]*$/;\n\n        let term = props.utterance.model.filter(item => !item.type).map(item => item.text).join(' ');\n\n    }, [props.utterance.model])\n\n    useEffect(() => {\n        /* \n        MAP MODEL TO STRING\n        Object with type param are mapped to MARK tags while those without are mapped to text NODES.\n        This is done only on initial component render.\n        */\n\n        if (props.utterance.model) {\n            let str = '';\n            if (props.utterance.model.length) {\n                str = props.utterance.model.map(item => {\n                    if (item.type) {\n                        return `<mark data-type=\"${item.type}\" data-slot-value=\"${item.slot_value}\" data-text=\"${item.text}\" data-color=\"${stringToColor(item.text)}\" style=\"background:${stringToColor(item.text)}\">${item.text}</mark>`\n                    } else {\n                        return item.text\n                    }\n                }).join(' ');\n            }\n\n            input.current.innerHTML = str + ' ';\n            text.current = str + ' ';\n            mapToWhitelist();\n        }\n    }, [props.stateChange, active]);\n\n    function createNode(type, slot_value, text) {\n        let mark = document.createElement('mark');\n        let newTextNode = document.createTextNode(text);\n\n        mark.appendChild(newTextNode);\n        mark.textContent = mark.textContent.trim();\n        mark.setAttribute('data-type', type);\n        mark.setAttribute('data-slot-value', slot_value);\n        mark.setAttribute('data-text', mark.textContent.trim());\n        mark.setAttribute('data-color', stringToColor(mark.textContent.trim()));\n        mark.style.background = stringToColor(text);\n\n        return mark;\n    }\n\n    const mapToWhitelist = () => {\n        let arr = Array.from(input.current.childNodes).filter(item => item.dataset).map(item => {\n            let reg = /^[a-zA-Z][a-zA-Z/\"/'/`/\\s]*$/;\n\n            console.log('slot value --->', item.dataset.slotValue)\n\n            return ({\n                type: item.dataset.type,\n                slot_value: item.dataset.slotValue,\n                text: item.textContent,\n                color: item.dataset.color,\n                validations: {\n                    slot_value: reg.test(item.dataset.slotValue)\n                }\n            })\n        }).filter(item => item.text.trim().length);\n\n        setWhitelist(arr);\n    }\n\n    const handleSelection = () => {\n        var sel\n        // Check for existence of window.getSelection() and that it has a\n        // modify() method. IE 9 has both selection APIs but no modify() method.\n        if (window.getSelection && (sel = window.getSelection()).modify) {\n            sel = window.getSelection()\n            if (!sel.isCollapsed) {\n                // Detect if selection is backwards\n                var range = document.createRange()\n                range.setStart(sel.anchorNode, sel.anchorOffset)\n                range.setEnd(sel.focusNode, sel.focusOffset)\n                var backwards = range.collapsed\n                range.detach()\n\n                // modify() works on the focus of the selection\n                var endNode = sel.focusNode,\n                    endOffset = sel.focusOffset\n                sel.collapse(sel.anchorNode, sel.anchorOffset)\n\n                var direction = []\n                if (backwards) {\n                    direction = ['backward', 'forward']\n                } else {\n                    direction = ['forward', 'backward']\n                }\n\n                sel.modify('move', direction[0], 'character')\n                sel.modify('move', direction[1], 'word')\n                sel.extend(endNode, endOffset)\n                sel.modify('extend', direction[1], 'character')\n                sel.modify('extend', direction[0], 'word')\n            }\n        }\n\n        /* \n        SET CURRENT SELECTION\n        */\n        if (sel.toString().length > 0) {\n            let sel = rangy.getSelection()\n            setSelection(sel)\n        } else {\n            setSelection(null);\n        }\n    }\n\n    const tagSelection = (type, slot_value) => {\n        console.log(type, slot_value);\n        if (selection) {\n            if (!selection.tagName) {\n                let mark = createNode(type, slot_value, selection.toString());\n                if (mark) {\n                    selection.getRangeAt(0).extractContents();\n                    selection.getRangeAt(0).insertNode(mark);\n\n                    if (mark.parentElement.tagName === \"MARK\") {\n                        mark.parentElement.replaceWith(...mark.parentElement.childNodes);\n                        mark.innerHTML = mark.textContent.trim();\n                    }\n\n                    input.current.childNodes.forEach((item) => {\n                        if (item.tagName === \"MARK\") {\n                            if (item.innerHTML.slice(-1).includes(' ')) {\n                                item.innerHTML = item.innerHTML.trim();\n                            }\n                        }\n                    })\n                }\n            } else {\n                let mark = selection;\n                mark.style.outline = \"none\";\n                mark.dataset.type = type;\n            }\n\n            text.current = input.current.innerHTML;\n            mapToWhitelist();\n            setSelection(null);\n            cursorPosition.current && setCaretPosition(input.current, cursorPosition.current);\n        }\n    }\n\n    useEffect(() => {\n        let s = window.getSelection();\n\n        if (s && s.rangeCount > 0) {\n            let oRange = s.getRangeAt(0); //get the text range\n            let oRect = oRange.getBoundingClientRect();\n\n            setDropdownState({\n                position: oRect.x,\n                active: selection !== null\n            })\n        } else {\n            setDropdownState({ ...dropdownState, active: false });\n        }\n    }, [selection, active]);\n\n    useEffect(() => {\n        if (input.current.childNodes.length) {\n            let model = Array.from(input.current.childNodes).map(item => {\n                if (item.dataset) {\n                    return ({\n                        type: item.dataset.type,\n                        text: item.textContent.trim(),\n                        slot_value: item.dataset.slotValue\n                    })\n                } else {\n                    return ({ text: item.textContent.trim() }\n                    )\n                }\n            }).filter(item => item.text.length)\n\n            let raw = model.map(item => item.text).join(' ');\n            let utterances = [...props.utterances];\n            utterances[props.index] = { raw: raw, model: model }\n            props.setUtterances(utterances)\n        }\n\n    }, [whitelist]);\n\n    if (props.utterance) {\n        return (\n            <React.Fragment>\n                <div data-new={props.utterance.new} class={`field ${valid ? 'field--valid' : 'field--invalid'} field--intent ${props.active === props.index ? 'field--active' : ''}`}>\n                    <div\n                        className='field__main'\n                    >\n                        <div className='field__input'>\n                            <div class='taggable-text' ref={inputWrapper}>\n                                <ContentEditable\n                                    data-placeholder=\"Enter reference value\"\n                                    innerRef={input}\n                                    className='taggable-text__input'\n                                    html={text.current}\n                                    onClick={(e) => {\n                                        if (e.target.tagName === 'MARK') {\n                                            setSelection(e.target);\n                                        }\n                                    }}\n                                    onChange={(e) => {\n                                        text.current = e.target.value;\n                                        cursorPosition.current = getCaretCharacterOffsetWithin(input.current);\n                                        mapToWhitelist();\n                                    }}\n                                    onMouseUp={() => {\n                                        handleSelection();\n                                        cursorPosition.current = getCaretCharacterOffsetWithin(input.current);\n                                    }}\n\n                                    onKeyDown={(e) => {\n                                        if (e.keyCode === 13 || e.keyCode === 40 || e.keyCode === 38) {\n                                            e.preventDefault();\n\n                                            if (e.keyCode === 13) {\n                                                document.querySelectorAll('.taggable-text__input')[0].focus();\n                                            }\n\n                                        }\n                                    }}\n                                    onKeyUp={(e) => {\n                                        handleSelection();\n                                        cursorPosition.current = getCaretCharacterOffsetWithin(input.current);\n                                    }}\n                                    onFocus={() => {\n                                        props.setActive(props.index)\n                                    }}\n                                />\n                            </div>\n                            {active && <Dropdown dropdownState={dropdownState} entities={props.entities} selection={selection} setSelection={setSelection} tagSelection={tagSelection} />}\n                            <div className=\"field__actions\">\n                                {!props.utterance.new &&\n                                    <button onClick={() => {\n                                        props.removeFromUtterances(props.utterance);\n                                        document.querySelectorAll('.taggable-text__input')[0].focus();\n                                    }}>\n                                        <IconTrash />\n                                    </button>}\n                            </div>\n                        </div>\n                    </div>\n                    {props.active === props.index &&\n                        <ul className=\"model-list\">\n                            {whitelist.length > 0 &&\n                                <header className=\"model-list__header\">\n                                    <strong>Parameter name</strong>\n                                    <strong>Entity</strong>\n                                    <strong>Resolved value</strong>\n                                </header>\n                            }\n                            {whitelist.map((item, index) => {\n                                return (\n                                    <li className=\"model-list__item\">\n                                        <input defaultValue={item.slot_value} onChange={(e) => {\n                                            /* let arr = [...whitelist];\n                                            arr[index].slot_value = e.target.value;\n                                            setWhitelist(arr); */\n                                        }} />\n                                        <div><mark style={{ background: item.color }}>{item.type}</mark></div>\n                                        <div>{item.text}</div>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    }\n                </div>\n            </React.Fragment>\n        )\n    } else {\n        return null\n    }\n}","import React, { useState } from 'react'\nimport { Utterance } from './utterance/Utterance.jsx'\n\nconst IntentUtterances = (props) => {\n\tconst [active, setActive] = useState(null);\n\n\tconst removeFromUtterances = (object) => {\n\t\tlet arr = props.utterances.filter(item => item !== object);\n\t\tprops.setUtterances(arr);\n\t\tsetActive(null);\n\t\tprops.setStateChange(!props.stateChange)\n\t}\n\n\tif (props.utterances) {\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{props.utterances.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Utterance key={index} utterance={item} index={index} active={active} setActive={setActive} entities={props.entities} removeFromUtterances={removeFromUtterances} utterances={props.utterances} setUtterances={props.setUtterances} stateChange={props.stateChange} setStateChange={props.setStateChange} />\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t)\n\t} else {\n\t\treturn null\n\t}\n}\n\nexport default React.memo(IntentUtterances);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport IntentUtterances from './IntentUtterances.jsx';\nimport _, { debounce } from 'lodash';\nimport { useRef } from 'react';\nimport { validateInput } from '../../helpers/validations.jsx';\n\nfunction IntentDetails(props) {\n  const [intent, setIntent] = useState(props.intent);\n  const entities = props.entities;\n  const systemEntities = props.systemEntities;\n  const [stateChange, setStateChange] = useState(false);\n  const [update, setUpdate] = useState(false);\n\n  const [name, setName] = useState('');\n  const [utterances, setUtterances] = useState([]);\n  const [newExpression, setNewExpression] = useState(null);\n\n  const [valid, setValid] = useState(true);\n\n  const newExpressionInput = useRef(null);\n\n  const searchInput = useRef(null);\n\n  const focusOnExpressionInput = () => {\n    newExpressionInput.current.focus();\n    newExpressionInput.current.value = '';\n    setActive(null);\n  };\n\n  // add new value to value array\n  function addNewValue() {\n    let arr = [...utterances];\n    let newUtterance = {\n      raw: newExpression ? newExpression : '',\n      model: [{ text: newExpression ? newExpression : '' }],\n    };\n    arr = [newUtterance, ...arr];\n    setUtterances(arr);\n    setActive(0);\n  }\n\n  // check if data is passed in props\n  useEffect(() => {\n    if (intent) {\n      setName(intent.name);\n      setUtterances(intent.utterances);\n    }\n  }, [intent]);\n\n  useEffect(() => {\n    if (name && utterances) {\n\n      let intent = {\n        ...intent,\n        name: name,\n        utterances: utterances.filter(item => item.new),\n      }\n      \n      props.onUpdate(intent);\n\n      setUpdate(true);\n      setTimeout(() => {\n        setUpdate(false);\n      }, 200)\n    }\n  }, [name, utterances]);\n\n  const handleSearch = () => {\n    if (searchInput.current) {\n      let arr = intent.utterances;\n      arr = arr.filter(item => item.raw.toLowerCase().includes(searchInput.current.value.toLowerCase().trim()));\n      setUtterances(arr)\n    }\n  }\n\n  const handler = useCallback(debounce(handleSearch, 300), []);\n\n  const onChange = () => {\n    handler();\n  };\n\n  if (intent) {\n    return (\n      <div className=\"convo-details\">\n        <section className=\"layout--editor-content\">\n          <div>\n            {/* Entity name value */}\n            <div className=\"margin--30--large\">\n              <h3 className=\"margin--10--large\">Intent name</h3>\n              <form\n                onSubmit={e => {\n                  e.preventDefault();\n                }}\n              >\n                <input\n                  type=\"text\"\n                  defaultValue={name ? name : ''}\n                  placeholder=\"Intent name\"\n                  className=\"editor-input input--item-name\"\n                  onChange={e => {\n                    let message =\n                      'Intent names shall begin with alphabetic characters from a to Z. The intent name may contain 1 underscore per word. Intent names shall not contain any numbers at all.';\n                    validateInput(\n                      e.target,\n                      e.target.value,\n                      '^[A-Za-z](_?[A-Za-z])*_?$',\n                      message\n                    );\n                    setName(e.target.value);\n                  }}\n                  required\n                />\n              </form>\n            </div>\n            {/* Entity words */}\n            <div className=\"margin--50--large\">\n              <div className=\"search-wrapper\">\n                <h3>Utterances</h3>\n                <input ref={searchInput} className=\"editor-input input--search\" type=\"text\" placeholder=\"Search utterances\" onChange={(e) => {\n                  onChange()\n                }} />\n              </div>\n              {update && <span style={{position: \"fixed\", left: 0, bottom: 0}}>Update!!</span>}\n              <div className=\"margin--24--large\">\n                <IntentUtterances\n                  addNewValue={addNewValue}\n                  utterances={utterances}\n                  setUtterances={setUtterances}\n                  entities={[entities, ...systemEntities]}\n                  focusOnExpressionInput={focusOnExpressionInput}\n                  stateChange={stateChange}\n                  setStateChange={setStateChange}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default IntentDetails;\n","import React from 'react'\nimport EntityDetails from './components/EntityComponent/EntityDetails'\nimport IntentDetails from './components/IntentComponent/IntentDetails'\nimport './styles.scss'\n\nexport const IntentEditor = (props) => {\n  return <IntentDetails intent={props.intent} entities={props.entities} systemEntities={props.systemEntities} onUpdate={props.onUpdate} />\n}\n\nexport const EntityEditor = (props) => {\n  return <EntityDetails entity={props.entity} onUpdate={props.onUpdate} />\n}"],"names":["IconTrash","EntityValue","props","value","setValue","useState","item","synonyms","setSynonyms","newSynonym","setNewSynonym","remove","setRemove","synonymInput","useRef","useEffect","handleUpdate","values","index","handleNewSynonym","target","current","length","removeSynonym","arr","indexOf","splice","makeSynonyms","items","active","map","i","handleRemove","e","stopPropagation","setTimeout","removeValue","activeValue","setActiveValue","preventDefault","marginLeft","EntityValues","setValues","makeItems","validateInput","elem","term","regex","message","reg","RegExp","test","setCustomValidity","reportValidity","EntityDetails","entity","setEntity","name","setName","newValue","setNewValue","valid","setValid","valueInput","onUpdate","addNewValue","val","validate","stringToColor","getHashCode","intToHSL","String","prototype","hash","charCodeAt","Number","shortened","getCaretCharacterOffsetWithin","element","caretOffset","doc","ownerDocument","document","win","defaultView","parentWindow","sel","getSelection","rangeCount","range","getRangeAt","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","toString","selection","type","textRange","createRange","preCaretTextRange","body","createTextRange","moveToElementText","setEndPoint","text","setCaretPosition","el","pos","node","childNodes","nodeType","window","setStart","collapse","removeAllRanges","addRange","Dropdown","entities","setEntities","allEntities","setAllEntities","entitiesNames","setEntitiesNames","input","modalRef","useOnclickOutside","setSelection","filterEntities","filteredArr","filter","toLowerCase","includes","trim","dropdownStyles","position","top","transition","visibility","dropdownState","opacity","left","tagSelection","Utterance","setDropdownState","whitelist","setWhitelist","inputWrapper","cursorPosition","utterance","model","join","str","slot_value","innerHTML","mapToWhitelist","stateChange","createNode","mark","createElement","newTextNode","createTextNode","appendChild","textContent","setAttribute","style","background","Array","from","dataset","console","log","slotValue","color","validations","handleSelection","modify","isCollapsed","anchorNode","anchorOffset","focusNode","focusOffset","backwards","collapsed","detach","endNode","direction","extend","rangy","tagName","extractContents","insertNode","parentElement","replaceWith","forEach","slice","outline","s","oRange","oRect","getBoundingClientRect","x","raw","utterances","setUtterances","new","keyCode","querySelectorAll","focus","setActive","removeFromUtterances","IntentUtterances","object","setStateChange","React","memo","IntentDetails","intent","setIntent","systemEntities","update","setUpdate","newExpression","setNewExpression","newExpressionInput","searchInput","focusOnExpressionInput","newUtterance","handleSearch","handler","useCallback","debounce","onChange","bottom","IntentEditor","EntityEditor"],"mappings":"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"}